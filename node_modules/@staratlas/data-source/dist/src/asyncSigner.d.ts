import { Keypair, PublicKey, Signer } from '@solana/web3.js';
import { Wallet } from '@staratlas/anchor/dist/cjs/provider';
import { AnyTransaction } from './transactions';
export interface AsyncSigner<T = unknown> {
    inner?(): T;
    requiresAsync(): boolean;
    publicKey(): PublicKey;
    sign<TT extends AnyTransaction>(tx: TT): Promise<TT>;
    signAll<TT extends AnyTransaction>(txs: TT[]): Promise<TT[]>;
    signMessage?(message: Uint8Array): Promise<Uint8Array>;
}
export declare function isAsyncSigner(obj: any): obj is AsyncSigner;
export declare function keypairToAsyncSigner(keypair: Keypair): AsyncSigner<Keypair>;
export declare function walletToAsyncSigner(wallet: Wallet): AsyncSigner<Wallet>;
export declare function signerToAsyncSigner<T extends Signer>(signer: T): AsyncSigner<T>;
export declare function createDummyAsyncSigner(debugAddress: PublicKey): AsyncSigner<never>;
//# sourceMappingURL=asyncSigner.d.ts.map