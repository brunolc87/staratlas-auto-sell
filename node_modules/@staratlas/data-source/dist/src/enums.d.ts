/**
 * Convert to Typescript Enum to an Anchor enum
 *
 * @param enumDef The enum definition
 * @param valueToConvert The enum value that needs to be converted
 * @returns the anchor enum
 */
export declare const getAnchorEnum: <E, K extends string>(enumDef: { [key in K]: E; }, valueToConvert: E) => never;
/**
 * Convert an enum to a number value
 *
 * @param enumDef The enum definition
 * @param valueToConvert The enum value that needs to be converted
 * @param indexOffset The index offset (typically this value is 1)
 * @returns the numerical value of the enum value
 */
export declare const getNumberFromEnum: <E, K extends string>(enumDef: { [key in K]: E; }, valueToConvert: E, indexOffset?: number) => number;
//# sourceMappingURL=enums.d.ts.map