"use strict";
// import { expect } from 'chai';
Object.defineProperty(exports, "__esModule", { value: true });
exports.runForAll = exports.combineObjectArrays = void 0;
function combineObjectArrays(arr1, arr2) {
    return arr1.map((obj1) => arr2.map((obj2) => (Object.assign(Object.assign({}, obj1), obj2)))).flat();
}
exports.combineObjectArrays = combineObjectArrays;
function runForAll(runArgs, func) {
    const runConfigs = Object.keys(runArgs)
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        .map((key) => runArgs[key].map((val) => ({ [key]: val })))
        .reduce((prev, curr) => combineObjectArrays(prev, curr), [{}]);
    return runConfigs.map((config) => func(config));
}
exports.runForAll = runForAll;
// it('test runForAll', () => {
//   const from = {
//     canIncrement: [true, false],
//     canDecrement: [true, false],
//     licenseType: ['none', 'burn', 'vault'],
//   };
//   const into = [
//     {
//       canIncrement: true,
//       canDecrement: true,
//       licenseType: 'none',
//     },
//     {
//       canIncrement: true,
//       canDecrement: true,
//       licenseType: 'burn',
//     },
//     {
//       canIncrement: true,
//       canDecrement: true,
//       licenseType: 'vault',
//     },
//     {
//       canIncrement: true,
//       canDecrement: false,
//       licenseType: 'none',
//     },
//     {
//       canIncrement: true,
//       canDecrement: false,
//       licenseType: 'burn',
//     },
//     {
//       canIncrement: true,
//       canDecrement: false,
//       licenseType: 'vault',
//     },
//     {
//       canIncrement: false,
//       canDecrement: true,
//       licenseType: 'none',
//     },
//     {
//       canIncrement: false,
//       canDecrement: true,
//       licenseType: 'burn',
//     },
//     {
//       canIncrement: false,
//       canDecrement: true,
//       licenseType: 'vault',
//     },
//     {
//       canIncrement: false,
//       canDecrement: false,
//       licenseType: 'none',
//     },
//     {
//       canIncrement: false,
//       canDecrement: false,
//       licenseType: 'burn',
//     },
//     {
//       canIncrement: false,
//       canDecrement: false,
//       licenseType: 'vault',
//     },
//   ];
//
//   expect(runForAll(from, (arg) => arg)).to.deep.equal(into);
// });
//# sourceMappingURL=runForAll.js.map